version: '3.7'

x-default-opts:
  &default-opts
  # deploy:
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 20s
  replicas: 1
  placement:
    constraints: [node.role == manager]

services:
  python:
    image: continuumio/miniconda3:4.7.12
    networks:
      - public
    labels:
      traefik.enable: "true"
      traefik.http.routers.python.rule: Host(`python.th.is`)
      traefik.http.routers.python.entrypoints: https
      traefik.http.routers.python.tls: "true"
      traefik.http.services.python.loadbalancer.server.port: 5000
    entrypoint:
      - python
    command:
      - "-m"
      - "http.server"
      - "5000"
    deploy:
      <<: *default-opts

  whoami:
    image: containous/whoami:v1.3.0
    command:
      # It tells whoami to start listening on 8082 instead of 80
      - --port=8082
    networks:
      - public
    labels:
      traefik.enable: "true"
      # HTTP endpoint
      #      traefik.http.routers.whoami-http.rule: Host(`whoami.th.is`)
      #      traefik.http.routers.whoami-http.entrypoints: http
      #      traefik.http.routers.whoami-http.service: whoami-http
      #      traefik.http.services.whoami-http.loadbalancer.server.port: 8082
      traefik.http.routers.whoami-https.rule: Host(`whoami.th.is`)
      traefik.http.routers.whoami-https.tls: "true"
      traefik.http.routers.whoami-https.entrypoints: https
      traefik.http.routers.whoami-https.service: whoami-https
      traefik.http.services.whoami-https.loadbalancer.server.port: 8082
      # basic auth
    #      traefik.http.routers.whoami.middlewares: auth
    #      Basic auth (login: user | password: password)
    #      traefik.http.middlewares.auth.basicauth.users: user:$$apr1$$q8eZFHjF$$Fvmkk//V6Btlaf2i/ju5n/
    deploy:
      <<: *default-opts
      resources:
        limits:
          cpus: '0.10'
          memory: 32M
        reservations:
          cpus: '0.05'
          memory: 10M

networks:
  public:
    external: true